<?xml version="1.0" encoding="UTF-8"?>
<project name="RMS" default="compile" basedir=".">
    <description>Builds, tests, and runs the project RMS.</description>
    <import file="nbproject/build-impl.xml"/>  

	<property environment="envi"/>
	<property name="package.name" value="RMS"/>
	<property name="source.dir" value="${basedir}/src"/>
	<property name="jar.dir" value="${basedir}/jar"/>
	<property name="build.dir" value="${basedir}/build"/>
	<property name="javadoc.dir" value="${basedir}/doc"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="jar.name" value="${ant.project.name}.jar"/>
	
	<!-- Build classpath -->
	<path id="classpath">
		<pathelement location="${classes.dir}"/>
		<pathelement location="${jar.dir}/hsqldb.jar"/>
	</path>
	
	<!-- ********************************************************************** -->
	<!-- prepares the build directory                                           -->
	<!-- ********************************************************************** -->
	<target name="prepare">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${classes.dir}"/>
		<echo>finish prepare-task for ${ant.project.name}</echo>
	</target>
	
	<!-- ********************************************************************** -->
	<!-- compile source code                                                    -->
	<!-- ********************************************************************** -->
	
	<target name="compile" depends="prepare">
		<javac srcdir="${source.dir}"
					destdir="${classes.dir}"
					debug="on"
					deprecation="on"
					optimize="off"
					includes="**">
			<classpath refid="classpath"/>
		</javac>
		<echo> finish compile task for ${ant.project.name}</echo>
	</target>
	
	<target name = "getAdministrator" depends="compile">
		<java classname = "${package.name}.test.AdministratorDAOgetAdministrator">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name = "setAdministrator" depends="compile">
		<java classname = "${package.name}.test.AdministratorDAOsetAdministrator">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name = "addEmployee" depends="compile">
		<java classname = "${package.name}.test.EmployeeDAOadd">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name = "checkExistEmployee" depends="compile">
		<java classname = "${package.name}.test.EmployeeDAOcheckExist">
			<classpath refid="classpath"/>
		</java>
	</target>
		
	<target name = "getEmployeeInfo" depends="compile">
		<java classname = "${package.name}.test.EmployeeDAOgetEmployeeInfo">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name = "removeEmployee" depends="compile">
		<java classname = "${package.name}.test.EmployeeDAOremove">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name = "searchEmployee" depends="compile">
		<java classname = "${package.name}.test.EmployeeDAOsearchEmployee">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name = "updateEmployee" depends="compile">
		<java classname = "${package.name}.test.EmployeeDAOupdate">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name = "updateEmployeePassword" depends="compile">
		<java classname = "${package.name}.test.EmployeeDAOupdatePassword">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name = "bookResource" depends="compile">
		<java classname = "${package.name}.test.ResourceDAObook">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	
	<target name = "searchAllResource" depends="compile">
		<java classname = "${package.name}.test.ResourceDAOsearchResource1">
			<classpath refid="classpath"/>
		</java>
	</target>

	<target name = "searchResourceByDate" depends="compile">
		<java classname = "${package.name}.test.ResourceDAOsearchResource2">
			<classpath refid="classpath"/>
		</java>
	</target>

	<target name = "updateResource" depends="compile">
		<java classname = "${package.name}.test.ResourceDAOupdateResource">
			<classpath refid="classpath"/>
		</java>
	</target>

	<target name = "evaluateResource" depends="compile">
		<java classname = "${package.name}.test.ResourceDAOupdateResourceStatus">
			<classpath refid="classpath"/>
		</java>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${javadoc.dir}"/>
		<delete file="${jar.name}"/>
		<echo>finish clean task for ${ant.project.name}</echo>
	</target>

</project>
